#!/usr/bin/perl

PAGE:
while (<>) {
	if (/Type of peak hour being reported/) {
		$fname = $ARGV;
		$_ = <>;
		unless (/LOCATION: (.*)QC JOB/ || /INTERSECTION: (.*)QC JOB/) {
			print STDERR "$fname: expected LOCATION, not $_";
			next PAGE;
		}
		$name = $1;

		$_ = <>;
		unless (/CITY\/STATE: (.*)DATE: (.*)/) {
			print STDERR "$fname: expected CITY/STATE, not $_";
			next PAGE;
		}
		$city = $1;
		$date = $2;

		$_ = <>;
		if (/^( +(\d+) +(\d+) +Peak-Hour: (.*M))/) {
			$peakhour = $4;
			$left = length($1);
		} elsif (/^( +(\d+) +([0-9-.]+) +(\d+) +Peak-Hour: (.*M))/) {
			$peakhour = $5;
			$left = length($1);
		} else {
			print STDERR "$fname: expected north in/out, not $_";
			next PAGE;
		}

		$_ = <>;
		while ($_ eq "\n" || $_ =~ /\d\.\d/) {
			$_ = <>;
		}

		if (/^ +(\d+) +(\d+) +(\d+)/) {
			$nr = $1;
			$nt = $2;
			$nl = $3;
		} else {
			print STDERR "$fname: expected north numbers, not $_";
			next PAGE;
		}

		$_ = <>;
		while ($_ eq "\n") {
			$_ = <>;
		}
		if (/Peak 15-Min: (.*M)/) {
			$peak15 = $1;
		} else {
			print STDERR "$fname: expected peak 15, not $_";
			next PAGE;
		}

		$_ = <>;
		while (!(substr($_, 0, $left) =~ /[^ \n]/)) {
			$_ = <>;
		}
		if (/^ +(\d+) +(\d+) +(\d+) +(\d+)/) {
			$wl = $2;
			$er = $3;
		} else {
			print STDERR "$fname: expected wl/er, not $_";
			next PAGE;
		}

		$name =~ s/[ \n]*$//;
		$city =~ s/[ \n]*$//;

		print "$fname,$name $city,$date,$peakhour,$nr,$nt,$nl\n";
	}
}
